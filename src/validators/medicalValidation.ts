import { body } from 'express-validator';
import { GraphType, MedicalDataCategory } from '../types/graph';

export const medicalQueryValidation = [
    body('organizationId').isString().isLength({ min: 1, max: 100 }).withMessage('Organization ID is required and must be 1-100 characters'),
    body('query').isString().isLength({ min: 1, max: 500 }).withMessage('Query must be 1-500 characters'),
    body('context').optional().isString().isLength({ max: 1000 }).withMessage('Context must be less than 1000 characters'),
    body('sessionId').optional().isString().withMessage('Session ID must be a string'),
    body('conversational').optional().isBoolean().withMessage('Conversational flag must be a boolean'),
    body('generateDescription').optional().isBoolean().withMessage('Generate description flag must be a boolean'),
    body('autoRetry').optional().isBoolean().withMessage('Auto-retry flag must be a boolean'),
    body('generateSummary').optional().isBoolean().withMessage('Generate summary flag must be a boolean'),
    body('useSchemaCache').optional().isBoolean().withMessage('Schema cache flag must be a boolean'),
    body('multiAgentMode').optional().isBoolean().withMessage('Multi-agent mode flag must be a boolean'),
    body('detailedAnalytics').optional().isBoolean().withMessage('Detailed analytics flag must be a boolean'),
    body('friendlyErrors').optional().isBoolean().withMessage('Friendly errors flag must be a boolean'),
    body('advancedConversation').optional().isBoolean().withMessage('Advanced conversation flag must be a boolean'),
    body('autocompleteMode').optional().isBoolean().withMessage('Autocomplete mode flag must be a boolean'),
    body('maxRetries').optional().isInt({ min: 0, max: 3 }).withMessage('Max retries must be between 0 and 3'),
    body('summaryFormat').optional().isIn(['text', 'chart', 'highlights', 'full']).withMessage('Invalid summary format'),
    body('useChains').optional().isBoolean().withMessage('Use chains flag must be a boolean'),
    body('chainType').optional().isIn(['simple', 'sequential', 'router', 'multiprompt']).withMessage('Invalid chain type'),
    body('preferredChain').optional().isString().withMessage('Preferred chain must be a string'),
    body('generateGraph').optional().isBoolean().withMessage('Generate graph flag must be a boolean'),
    body('graphType').optional().isIn(Object.values(GraphType)).withMessage('Invalid graph type'),
    body('graphCategory').optional().isIn(Object.values(MedicalDataCategory)).withMessage('Invalid medical data category'),
    body('graphConfig').optional().isObject().withMessage('Graph configuration must be an object'),
    body('graphConfig.xAxis').optional().isString().withMessage('X-axis field must be a string'),
    body('graphConfig.yAxis').optional().isString().withMessage('Y-axis field must be a string'),
    body('graphConfig.colorBy').optional().isString().withMessage('Color by field must be a string'),
    body('graphConfig.sizeBy').optional().isString().withMessage('Size by field must be a string'),
    body('graphConfig.groupBy').optional().isString().withMessage('Group by field must be a string'),
    body('graphConfig.sortBy').optional().isString().withMessage('Sort by field must be a string'),
    body('graphConfig.limit').optional().isInt({ min: 1, max: 1000 }).withMessage('Graph limit must be between 1 and 1000'),
    body('graphConfig.aggregation').optional().isIn(['count', 'sum', 'avg', 'min', 'max', 'median']).withMessage('Invalid aggregation type'),
    body('graphConfig.showTrends').optional().isBoolean().withMessage('Show trends flag must be a boolean'),
    body('graphConfig.showOutliers').optional().isBoolean().withMessage('Show outliers flag must be a boolean'),
    body('graphConfig.includeNulls').optional().isBoolean().withMessage('Include nulls flag must be a boolean'),
    body('graphConfig.customColors').optional().isArray().withMessage('Custom colors must be an array'),
    body('graphConfig.title').optional().isString().withMessage('Graph title must be a string'),
    body('graphConfig.subtitle').optional().isString().withMessage('Graph subtitle must be a string'),
    body('graphConfig.description').optional().isString().withMessage('Graph description must be a string')
];
